---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/refs/heads/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authelia
  namespace: authelia
spec:
  interval: 15m
  chart:
    spec:
      chart: authelia
      version: 29.17.0
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
      interval: 15m
      reconcileStrategy: Revision
  timeout: 20m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    credentials:
      s3:
        type: s3
        url: "${S3URL}"
        bucket: "${S3PREFIX}-authelia"
        accessKey: "${S3ID}"
        secretKey: "${S3KEY}"
        encrKey: "${S3KEY}"
    workload:
      main:
        replicas: 1
        podSpec:
          containers:
            main:
              env:
                AUTHELIA_SESSION_SECRET: ${AUTHELIA_SESSION_KEY}
                AUTHELIA_IDENTITY_VALIDATION_RESET_PASSWORD_JWT_SECRET: ${AUTHELIA_JWT_KEY}
                AUTHELIA_STORAGE_ENCRYPTION_KEY: ${AUTHELIA_ENCRYPTION_KEY}
    authelia:
      server:
        buffers:
          read: 16384
          write: 16384
      theme: auto
      totp:
        issuer: ${DOMAIN_0}
      authentication_backend:
        ldap:
          implementation: 'lldap'
          address: ldap://lldap-ldap.lldap.svc.cluster.local:3890
          tls:
            server_name: lldap.${DOMAIN_0}
          base_dn: ${LLBASEDN}
          additional_users_dn: ou=people
          users_filter: (&(|({username_attribute}={input})({mail_attribute}={input}))(objectClass=person))
          additional_groups_dn: ou=groups
          user: uid=${LLUSERDN},ou=people,${LLBASEDN}
          password: ${LLUSERPASS}
      access_control:
        rules:
        - domain:
            - ${DOMAIN_0}
            - '*.${DOMAIN_0}'
          policy: bypass
          resources:
          - "^/api([/?].*)?$"
          - "^/api([/?].*)?$"
          - "^/identity.*$"
          - "^/triggers.*$"
          - "^/meshagents.*$"
          - "^/meshsettings.*$"
          - "^/agent.*$"
          - "^/control.*$"
          - "^/meshrelay.*$"
          - "^/wl.*$"
        - domain:
            - ${DOMAIN_0}
            - '*.${DOMAIN_0}'
          policy: two_factor
          subject:
            - 'group:admin'
      session:
        cookies:
          - domain: '${DOMAIN_0}'
            authelia_url: 'https://auth.${DOMAIN_0}'
            default_redirection_url: 'https://www.${DOMAIN_0}'
      regulation:
        find_time: 10m
        ban_time: 12h
      notifier:
        smtp:
          address: 'smtp://${SMTP_HOST}:2525'
          username: ${SMTP_USER}
          password: ${SMTP_PASSWORD}
          sender: ${SMTP_EMAIL}
          startup_check_address: ${SMTP_EMAIL}
          disable_html_emails: true
          tls:
            server_name: ${SMTP_HOST}
    ingress:
      main:
        enabled: true
        ingressClassName: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.tls: 'true'
          traefik.ingress.kubernetes.io/router.middlewares: traefik-chain-basic@kubernetescrd
        integrations:
          traefik:
            enabled: false
          certManager:
            enabled: true
            certificateIssuer: domain-0-le-prod
        hosts:
          - host: auth.${DOMAIN_0}
            paths:
              - path: /
                pathType: Prefix
    gatus:
      endpoints:
        - name: Authelia
          group: Auth
          url: "http://authelia.authelia.svc.cluster.local:9091"
          interval: 1m
          ui:
            hide-url: true
            hide-hostname: true
          conditions:
            - "[CONNECTED] == true"
          alerts:
            - type: discord
              description: "healthcheck failed"
              send-on-resolved: true
    configmap:
      gatus:
        enabled: true
        labels:
          gatus.io/enabled: "true"
        data:
          config.yaml: |
            {{- $.Values.gatus | toYaml | nindent 2 }}
    cnpg:
      main:
        mode: recovery
        cluster:
          singleNode: true
        backups:
          enabled: true
          credentials: s3
          scheduledBackups:
            - name: daily-backup
              schedule: "0 5 0 * * *"
              backupOwnerReference: self
              immediate: true
              suspend: false
        recovery:
          method: object_store
          credentials: s3
    persistence:
      config:
        volsync:
          - name: config
            type: restic
            credentials: s3
            dest:
              enabled: true
            src:
              enabled: true
              trigger:
                schedule: "0 5 * * *"
